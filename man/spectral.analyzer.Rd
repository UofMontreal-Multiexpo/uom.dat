% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spectral_analyzer.R
\name{spectral.analyzer}
\alias{spectral.analyzer}
\title{Spectral Analyzer constructor}
\usage{
spectral.analyzer(
  observations,
  items = NULL,
  target = "closed frequent itemsets",
  count = 1,
  min_length = 1,
  max_length = Inf,
  status_limit = 2,
  init = TRUE,
  verbose = TRUE
)
}
\arguments{
\item{observations}{List of observations containing the items corresponding to each observation.
Each observation is itself a list containing at least two elements named \code{"CODE"} and
\code{"YEAR"}. \code{"YEAR"} must be numeric and \code{"CODE"} must be character or numeric values.
Values of \code{CODE} must not contain the character \code{"/"}.
An observation can contain any additional information in its list.}

\item{items}{Data frame associating a name (column \code{name}) and one or more categories
(additional columns) to each item (column \code{item}). Each category must be of type \code{factor}.
The columns \code{item} and \code{name} must be of type \code{character}. The default value,
\code{NULL}, specifies that no name or category is defined.}

\item{target}{Type of patterns to enumerate. One of \code{"frequent itemsets"},
\code{"closed frequent itemsets"}, \code{"maximally frequent itemsets"} (see 'Details').}

\item{count}{Minimum number of occurrences of a pattern to be considered as "frequent".}

\item{min_length}{Minimum number of items that a pattern must have to be kept when enumerating.}

\item{max_length}{Maximum number of items that a pattern must have to be kept when enumerating.
The default \code{Inf} corresponds to a pattern search without maximum size limit.}

\item{status_limit}{Time interval for which to characterize the status of the patterns in relation
to the total period of observations (number of years).}

\item{init}{If \code{TRUE}, attributes relating to nodes, links between nodes, patterns and links
between patterns are initialized.
If \code{FALSE}, only attributes relating to observations, items and categories are initialized.}

\item{verbose}{Logical value indicating whether to report progress.}
}
\value{
New object of class \code{SpectralAnalyzer}.
}
\description{
Create and initialize an object of class \code{SpectralAnalyzer}.
}
\details{
If items are not specified using the argument \code{items}, they are automatically listed from
 the values of \code{CODE} in the argument \code{observations} without any categorization or
 specific denomination.

The type of patterns mined can be:
 \itemize{
   \item{\code{"frequent itemsets"}: itemsets appearing in the observations according to an
         occurrence threshold defined by the parameter \code{count}.}
   \item{\code{"closed frequent itemsets"}: maximal itemsets of equivalence classes. An equivalence
         class is defined as the set of itemsets appearing in the same observations.}
   \item{\code{"maximally frequent itemsets"}: frequent itemsets which do not have any frequent
         superset. Also named as the maximals by inclusion of the frequent itemsets
         or the positive boundary of the frequent itemsets.}
 }

The \strong{frequent itemsets} are an exhaustive list of frequent itemsets.
 The \strong{closed frequent itemsets} synthesize the information so as to reduce the memory space
 required without real loss of information thanks to the equivalence classes.
 The \strong{maximal frequent itemsets} required even less memory since they are a subset of the
 closed frequent itemsets.
 
For an explanation with illustrated examples about the different types of itemsets, read the
 vignette titled "\emph{Mining itemsets}".
}
\examples{
## Creating a SpectralAnalyzer from a list of observations
obs <- make_observations(oedb_sample, by = "ID",
                         additional = c("CODE", "NAME", "YEAR"))

sa_object_1 <- spectral.analyzer(obs)

## Creating a SpectralAnalyzer after associating item identifiers with
## names and one category
items_ids <- get_all_items(obs)
category_1 <- substances_information[match(items_ids,
                                           substances_information$CODE),
                                     "SUBFAMILY"]
category_1[is.na(category_1)] <- "Unknown"
names <- substances_information[match(items_ids,
                                      substances_information$CODE),
                                "NAME"]

items <- data.frame(item = items_ids, name = names, family = category_1)
sa_object_2 <- spectral.analyzer(obs, items)

}
\seealso{
\code{\link{SpectralAnalyzer}}, \code{\link{reset}}, \code{\link{init}},
         \code{\link{is_init}}.
}
\author{
Gauthier Magnin
}
